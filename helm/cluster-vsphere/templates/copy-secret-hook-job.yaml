#
#
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "{{ include "resource.default.name" $ }}-copy-secret-hook"
  namespace: "{{ $.Release.Namespace }}"
  annotations:
    {{- include "copyHookAnnotations" $ | nindent 4 }}
    "helm.sh/hook-weight": "-3"
  labels:
    {{- include "labels.common" $ | nindent 4 }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: "{{ include "resource.default.name" $ }}-read-secret"
  namespace: "{{ .Values.userContext.secretRef.secretNamespace }}"
  annotations:
    {{- include "copyHookAnnotations" $ | nindent 4 }}
    "helm.sh/hook-weight": "-3"
  labels:
    {{- include "labels.common" $ | nindent 4 }}
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: "{{ include "resource.default.name" $ }}-create-secret"
  namespace: "{{ $.Release.Namespace }}"
  annotations:
    {{- include "copyHookAnnotations" $ | nindent 4 }}
    "helm.sh/hook-weight": "-3"
  labels:
    {{- include "labels.common" $ | nindent 4 }}
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: "{{ include "resource.default.name" $ }}-read-secret"
  namespace: "{{ .Values.userContext.secretRef.secretNamespace }}"
  annotations:
    {{- include "copyHookAnnotations" $ | nindent 4 }}
    "helm.sh/hook-weight": "-2"
  labels:
    {{- include "labels.common" $ | nindent 4 }}
subjects:
  - kind: ServiceAccount
    name: "{{ include "resource.default.name" $ }}-copy-secret-hook"
    namespace: "{{ $.Release.Namespace }}"
roleRef:
  kind: Role
  name: "{{ include "resource.default.name" $ }}-read-secret"
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: "{{ include "resource.default.name" $ }}-create-secret"
  namespace: "{{ .Values.userContext.secretRef.secretNamespace }}"
  annotations:
    {{- include "copyHookAnnotations" $ | nindent 4 }}
    "helm.sh/hook-weight": "-2"
  labels:
    {{- include "labels.common" $ | nindent 4 }}
subjects:
  - kind: ServiceAccount
    name: "{{ include "resource.default.name" $ }}-copy-secret-hook"
    namespace: "{{ $.Release.Namespace }}"
roleRef:
  kind: Role
  name: "{{ include "resource.default.name" $ }}-create-secret"
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ include "resource.default.name" $ }}-copy-secret-hook"
  namespace: "{{ $.Release.Namespace }}"
  annotations:
    {{- include "copyHookAnnotations" $ | nindent 4 }}
    "helm.sh/hook-weight": "-1"
  labels:
    {{- include "labels.common" $ | nindent 4 }}
spec:
  ttlSecondsAfterFinished: 86400 # 24h
  template:
    metadata:
      name: "{{ include "resource.default.name" $ }}-copy-secret-hook"
      namespace: "{{ $.Release.Namespace }}"
      labels:
        {{- include "labels.common" $ | nindent 8 }}
    spec:
      restartPolicy: Never
      serviceAccountName: "{{ include "resource.default.name" $ }}-copy-secret-hook"
      securityContext:
        runAsUser: {{ include "securityContext.runAsUser" $ }}
        runAsGroup: {{ include "securityContext.runAsGroup" $ }}
      containers:
        - name: copy-secret-hook
          image: "{{ .Values.kubectlImage.registry }}/{{ .Values.kubectlImage.name }}:{{ .Values.kubectlImage.tag }}"
          command:
            - "/bin/sh"
            - "-xc"
            - |
              # _cred=$(kubectl get secret {{ .Values.userContext.secretRef.secretName }} -n "{{ .Values.userContext.secretRef.secretNamespace }}" -ojson |\
              #          jq -r '.data | "\(.username | @base64d)\n\(.password | @base64d)"')
              # [ $? -ne 0 ] && echo "can't get the credentials" >&2 && exit 1
              # _username=$(echo $_cred | head -1)
              # _password=$(echo $_cred | tail -1)
              kubectl get secret "{{ .Values.userContext.secretRef.secretName }}" -n "{{ .Values.userContext.secretRef.secretNamespace }}" -ojson |\
                      jq 'del(.metadata.creationTimestamp, .metadata.uid, .metadata.resourceVersion, .metadata.namespace, .metadata.annotations)' |\
                      jq '.metadata.name="{{ include "resource.default.name" $ }}"' |\
              kubectl apply --namespace "{{ $.Release.Namespace }}" -f -
              [ $? -ne 0 ] && echo "can't get the credentials" >&2 && exit 1
              echo "Secret has been successfully copied"
              exit 0

          securityContext:
            readOnlyRootFilesystem: true
          resources:
            requests:
              memory: "64Mi"
              cpu: "10m"
            limits:
              memory: "256Mi"
              cpu: "100m"
