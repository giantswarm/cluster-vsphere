apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: KubeadmControlPlane
metadata:
  labels:
    {{- include "labels.common" . | nindent 4 }}
  name: {{ include "resource.default.name" $ }}
  namespace: {{ .Release.Namespace }}
spec:
  kubeadmConfigSpec:
    clusterConfiguration:
      apiServer:
        extraArgs:
          cloud-provider: external
      controllerManager:
        extraArgs:
          cloud-provider: external
      etcd:
        local:
          imageRepository: {{ .Values.controlPlane.etcd.imageRepository }}
          imageTag: {{ .Values.controlPlane.etcd.imageTag }}
    files:
    - content: |
        apiVersion: v1
        kind: Pod
        metadata:
          creationTimestamp: null
          name: kube-vip
          namespace: kube-system
        spec:
          containers:
          - args:
            - start
            env:
            - name: vip_arp
              value: "true"
            - name: vip_leaderelection
              value: "true"
            - name: vip_address
              value: {{ .Values.controlPlane.endpoint.host }}
            - name: vip_interface
              value: eth0
            - name: vip_leaseduration
              value: "15"
            - name: vip_renewdeadline
              value: "10"
            - name: vip_retryperiod
              value: "2"
            image: ghcr.io/kube-vip/kube-vip:v0.3.5
            imagePullPolicy: IfNotPresent
            name: kube-vip
            resources: {}
            securityContext:
              capabilities:
                add:
                - NET_ADMIN
                - SYS_TIME
            volumeMounts:
            - mountPath: /etc/kubernetes/admin.conf
              name: kubeconfig
          hostNetwork: true
          volumes:
          - hostPath:
              path: /etc/kubernetes/admin.conf
              type: FileOrCreate
            name: kubeconfig
        status: {}
      owner: root:root
      path: /etc/kubernetes/manifests/kube-vip.yaml
    initConfiguration:
      nodeRegistration:
        criSocket: /var/run/containerd/containerd.sock
        kubeletExtraArgs:
          cloud-provider: external
        name: {{` '{{ ds.meta_data.hostname }}' `}}
    joinConfiguration:
      nodeRegistration:
        criSocket: /var/run/containerd/containerd.sock
        kubeletExtraArgs:
          cloud-provider: external
        name: {{` '{{ ds.meta_data.hostname }}' `}}
    preKubeadmCommands:
    - hostname {{` "{{ ds.meta_data.hostname }}" `}}
    - echo "::1         ipv6-localhost ipv6-loopback" >/etc/hosts
    - echo "127.0.0.1   localhost" >>/etc/hosts
    - echo {{` "127.0.0.1   {{ ds.meta_data.hostname }}" `}} >>/etc/hosts
    - echo {{` "{{ ds.meta_data.hostname }}" `}} >/etc/hostname
    useExperimentalRetryJoin: true
    {{- if and .Values.kubeadm .Values.kubeadm.users }}
    users:
    {{- range .Values.kubeadm.users }}
    - name: {{ .name }}
      sshAuthorizedKeys:
      {{- range .authorizedKeys }}
      - {{ . }}
      {{- end }}
      sudo: ALL=(ALL) NOPASSWD:ALL
    {{- end }}
    {{- end }}
  machineTemplate:
    infrastructureRef:
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      kind: VSphereMachineTemplate
      name: {{ include "resource.default.name" $ }}
  replicas: 1
  version: {{ .Values.cluster.kubernetesVersion }}
