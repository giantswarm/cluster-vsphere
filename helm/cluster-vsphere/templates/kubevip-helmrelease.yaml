# kube vip can be configured with svc_enable=true to effectively function as simple load balancer
# it assumes a cloud controler manager to be running in the cluster that will be responsible for assigning the IP
# for a Services with type LoadBalancer. This should be done by CNI. If there isn't any we can use their own:
# kubectl apply -f https://raw.githubusercontent.com/kube-vip/kube-vip-cloud-provider/main/manifest/kube-vip-cloud-controller.yaml 
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: {{ include "resource.default.name" $ }}-kubevip-lb
  namespace: {{ $.Release.Namespace }}
  annotations:
    cluster.giantswarm.io/description: "{{ .Values.clusterDescription }}"
  labels:
    cluster-apps-operator.giantswarm.io/watching: ""
    giantswarm.io/service-priority: "{{ .Values.servicePriority }}"
    {{- include "labels.common" . | nindent 4 }}
spec:
  releaseName: kubevip-lb
  targetNamespace: kube-system
  storageNamespace: kube-system
  chart:
    spec:
      chart: kube-vip
      version: 0.4.2
      sourceRef:
        kind: HelmRepository
        name: {{ include "resource.default.name" $ }}-kubevip
  kubeConfig:
    secretRef:
      name: {{ include "resource.default.name" $ }}-kubeconfig
  interval: 10m
  install:
    remediation:
      retries: 30
  # Default values
  # https://github.com/kube-vip/helm-charts/blob/main/charts/kube-vip/values.yaml
  values:
    config:
      vip_interface: eth0
      vip_address: {{ .Values.network.controlPlaneEndpoint.host }}
      svc_enable: true
