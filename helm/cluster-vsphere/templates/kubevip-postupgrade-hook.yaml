#kubectl --kubeconfig ~/workspace/mc-bootstrap/kubeconfigs/gjiri.kubeconfig create configmap -n kube-system kubevip --from-literal range-global=10.10.222.220-10.10.222.225
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "{{ include "resource.default.name" $ }}-create-cm"
  namespace: "kube-system"
  annotations:
    "helm.sh/hook": "post-install,pre-upgrade,post-upgrade"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
    "helm.sh/hook-weight": "-2"
  labels:
    {{- include "labels.common" $ | nindent 4 }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: "{{ include "resource.default.name" $ }}-create-cm"
  namespace: "kube-system"
  annotations:
    "helm.sh/hook": "post-install,pre-upgrade,post-upgrade"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
    "helm.sh/hook-weight": "-2"
  labels:
    {{- include "labels.common" $ | nindent 4 }}
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: "{{ include "resource.default.name" $ }}-create-cm"
  namespace: "kube-system"
  annotations:
    "helm.sh/hook": "post-install,post-upgrade"
    "helm.sh/hook-delete-policy": "before-hook-creation,hook-succeeded,hook-failed"
    "helm.sh/hook-weight": "-1"
  labels:
    {{- include "labels.common" $ | nindent 4 }}
subjects:
  - kind: ServiceAccount
    name: "{{ include "resource.default.name" $ }}-create-cm"
    namespace: "kube-system"
roleRef:
  kind: Role
  name: "{{ include "resource.default.name" $ }}-create-cm"
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: batch/v1
kind: Job
metadata:
  name: "{{ include "resource.default.name" $ }}-create-cm-job"
  namespace: "kube-system"
  labels:
    {{- include "labels.common" $ | nindent 4 }}
  annotations:
    "helm.sh/hook": "pre-upgrade"
    "helm.sh/hook-delete-policy": "before-hook-creation"
    "helm.sh/hook-weight": "0"
spec:
  ttlSecondsAfterFinished: 86400 # 24h
  template:
    metadata:
      name: "{{ include "resource.default.name" $ }}-create-cm-for-lb"
      namespace: "kube-system"
      labels:
        {{- include "labels.common" $ | nindent 8 }}
    spec:
      restartPolicy: Never
      serviceAccountName: "{{ include "resource.default.name" $ }}-create-cm"
      securityContext:
        runAsUser: {{ include "securityContext.runAsUser" $ }}
        runAsGroup: {{ include "securityContext.runAsGroup" $ }}
      containers:
        - name: post-install-job
          image: "{{ .Values.kubectlImage.registry }}/{{ .Values.kubectlImage.name }}:{{ .Values.kubectlImage.tag }}"
          command:
            - "/bin/sh"
            - "-xc"
            - |
              kubectl create configmap -n kube-system kubevip --from-literal range-global={{ .Values.network.loadBalancer.vipStartIP }}-{{ .Values.network.loadBalancer.vipEndIP }}
              exit 0
          securityContext:
            readOnlyRootFilesystem: true
          resources:
            requests:
              memory: "64Mi"
              cpu: "10m"
            limits:
              memory: "256Mi"
              cpu: "100m"
